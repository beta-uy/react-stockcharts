{"version":3,"sources":["../../../../src/lib/coordinates/AxisYCenteredTitle.js"],"names":["React","Component","PropTypes","GenericChartComponent","getMouseCanvas","isNotDefined","isDefined","functor","hexToRGBA","LabelAnnotation","defaultProps","helper","labelHelper","AxisYCenteredTitle","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","currentItem","text","renderValue","yAccessor","drawOnCanvas2","context","chartConfig","getYScale","getText","propTypes","displayFormat","func","isRequired","yAxisPad","number","rectWidth","rectHeight","orient","oneOf","at","fill","string","opacity","fontFamily","fontSize","textFill","snapX","bool","className","selectCanvas","oneOfType","textAnchor","rotate","onClick","xAccessor","xScale","yScale","datum","object","x","y","customX","mouseXY","displayXAccessor","coordinate","invert","strokeOpacity","strokeWidth","canvases","bg","contextTypes","canvasOriginX","canvasOriginY","margin","ratio","Array","isArray","undefined","show","height","stroke","rectRadius","fontWeight","edgeAt","type","y1","y2","hideLine","coordinateProps","arrowWidth","x1","x2","save","setTransform","scale","translate","left","top","restore","xPos","yPos","radians","Math","PI","font","fillStyle","textAlign","beginPath","fillText"],"mappings":"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","file":"AxisYCenteredTitle.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getMouseCanvas } from \"../GenericComponent\";\n\nimport { isNotDefined, isDefined, functor, hexToRGBA } from \"../utils\";\n\nimport LabelAnnotation, {\n    defaultProps,\n    helper as labelHelper,\n} from \"../annotation/LabelAnnotation\";\n\nclass AxisYCenteredTitle extends Component {\n    constructor(props) {\n        super(props);\n        this.renderSVG = this.renderSVG.bind(this);\n        this.drawOnCanvas = this.drawOnCanvas.bind(this);\n    }\n    drawOnCanvas(ctx, moreProps) {\n        if (isNotDefined(moreProps.currentItem)) {\n            return null;\n        }\n        const props = {\n            ...this.props,\n            text: this.props.renderValue(this.props.yAccessor(moreProps.currentItem)),\n        };\n        drawOnCanvas2(ctx, props, this.context, moreProps);\n    }\n    renderSVG(moreProps) {\n        const props = helper(this.props, moreProps);\n        if (isNotDefined(props)) return null;\n\n        const { chartConfig } = moreProps;\n\n        return (\n            <LabelAnnotation\n                yScale={getYScale(chartConfig)}\n                {...this.props}\n                text={getText(this.props)}\n            />\n        );\n    }\n\n    render() {\n        return (\n            <GenericChartComponent\n                clip={false}\n                svgDraw={this.renderSVG}\n                canvasDraw={this.drawOnCanvas}\n                canvasToDraw={getMouseCanvas}\n                drawOn={[\"mousemove\", \"pan\", \"drag\"]}\n            />\n        );\n    }\n}\n\nAxisYCenteredTitle.propTypes = {\n    displayFormat: PropTypes.func.isRequired,\n    yAxisPad: PropTypes.number,\n    rectWidth: PropTypes.number,\n    rectHeight: PropTypes.number,\n    orient: PropTypes.oneOf([\"bottom\", \"top\", \"left\", \"right\"]),\n    at: PropTypes.oneOf([\"bottom\", \"top\", \"left\", \"right\"]),\n    fill: PropTypes.string,\n    opacity: PropTypes.number,\n    fontFamily: PropTypes.string,\n    fontSize: PropTypes.number,\n    textFill: PropTypes.string,\n    snapX: PropTypes.bool,\n    className: PropTypes.string,\n    selectCanvas: PropTypes.func,\n    text: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    textAnchor: PropTypes.string,\n    rotate: PropTypes.number,\n    onClick: PropTypes.func,\n    xAccessor: PropTypes.func,\n    yAccessor: PropTypes.func,\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n    renderValue: PropTypes.func.isRequired,\n    datum: PropTypes.object,\n    x: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n    y: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n};\n\nfunction customX(props, moreProps) {\n    const { xScale, xAccessor, currentItem, mouseXY } = moreProps;\n    const { snapX } = props;\n    const x = snapX ? xScale(xAccessor(currentItem)) : mouseXY[0];\n\n    const { displayXAccessor } = moreProps;\n    const { displayFormat } = props;\n    const coordinate = snapX\n        ? displayFormat(displayXAccessor(currentItem))\n        : displayFormat(xScale.invert(x));\n    return { x, coordinate };\n}\n\nAxisYCenteredTitle.defaultProps = {\n    yAxisPad: 0,\n    rectWidth: 80,\n    rectHeight: 20,\n\n    // rectRadius: 5,\n    // stroke: \"#684F1D\",\n    strokeOpacity: 1,\n    strokeWidth: 1,\n\n    orient: \"bottom\",\n    at: \"bottom\",\n\n    fill: \"#525252\",\n    opacity: 1,\n    fontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\n    fontSize: 13,\n    textFill: \"#FFFFFF\",\n    snapX: true,\n    customX: customX,\n\n    ...defaultProps,\n    selectCanvas: canvases => canvases.bg,\n};\n\nAxisYCenteredTitle.contextTypes = {\n    canvasOriginX: PropTypes.number,\n    canvasOriginY: PropTypes.number,\n\n    margin: PropTypes.object.isRequired,\n    ratio: PropTypes.number.isRequired,\n};\n\nfunction getText(props) {\n    return functor(props.text)(props);\n}\n\nfunction getYScale(chartConfig) {\n    return Array.isArray(chartConfig) ? undefined : chartConfig.yScale;\n}\n\nfunction helper(props, moreProps) {\n    const { show, currentItem } = moreProps;\n    const {\n        chartConfig: { height },\n    } = moreProps;\n\n    if (isNotDefined(currentItem)) return null;\n\n    const { customX } = props;\n\n    const { orient, at } = props;\n    const { stroke, strokeOpacity, strokeWidth } = props;\n    const { rectRadius, rectWidth, rectHeight } = props;\n    const { fill, opacity, fontFamily, fontSize, fontWeight, textFill } = props;\n\n    const edgeAt = at === \"bottom\" ? height : 0;\n\n    const { x, coordinate } = customX(props, moreProps);\n\n    const type = \"vertical\";\n    const y1 = 0,\n        y2 = height;\n    const hideLine = true;\n\n    const coordinateProps = {\n        coordinate,\n        show,\n        type,\n        orient,\n        edgeAt,\n        hideLine,\n        fill,\n        opacity,\n        fontFamily,\n        fontSize,\n        fontWeight,\n        textFill,\n        stroke,\n        strokeOpacity,\n        strokeWidth,\n        rectWidth,\n        rectHeight,\n        rectRadius,\n        arrowWidth: 0,\n        x1: x,\n        x2: x,\n        y1,\n        y2,\n    };\n    return coordinateProps;\n}\n\nfunction drawOnCanvas2(ctx, props, context, moreProps) {\n    ctx.save();\n\n    const { canvasOriginX, canvasOriginY, margin, ratio } = context;\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.scale(ratio, ratio);\n\n    if (isDefined(canvasOriginX)) ctx.translate(canvasOriginX, canvasOriginY);\n    else ctx.translate(margin.left + 0.5 * ratio, margin.top + 0.5 * ratio);\n\n    drawOnCanvas(ctx, props, moreProps);\n\n    ctx.restore();\n}\n\nfunction drawOnCanvas(ctx, props, moreProps) {\n    const { textAnchor, fontFamily, fontSize, opacity, rotate } = props;\n    const { xScale, chartConfig, xAccessor } = moreProps;\n\n    const { xPos, yPos, fill, text } = labelHelper(\n        props,\n        xAccessor,\n        xScale,\n        getYScale(chartConfig),\n    );\n\n    const radians = rotate / 180 * Math.PI;\n    ctx.save();\n    ctx.translate(xPos, yPos);\n    ctx.rotate(radians);\n\n    ctx.font = `${fontSize}px ${fontFamily}`;\n    ctx.fillStyle = hexToRGBA(fill, opacity);\n    ctx.textAlign = textAnchor === \"middle\" ? \"center\" : textAnchor;\n\n    ctx.beginPath();\n    ctx.fillText(text, 0, 0);\n    ctx.restore();\n}\n\nexport default AxisYCenteredTitle;\n"]}